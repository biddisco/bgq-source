/* begin_generated_IBM_copyright_prolog                             */
/*                                                                  */
/* This is an automatically generated copyright prolog.             */
/* After initializing,  DO NOT MODIFY OR MOVE                       */
/*  --------------------------------------------------------------- */
/*                                                                  */
/* Licensed Materials - Property of IBM                             */
/* Blue Gene/Q                                                      */
/* (C) Copyright IBM Corp.  2010, 2012                              */
/* US Government Users Restricted Rights - Use, duplication or      */
/*   disclosure restricted by GSA ADP Schedule Contract with IBM    */
/*   Corp.                                                          */
/*                                                                  */
/* This software is available to you under the Eclipse Public       */
/* License (EPL).                                                   */
/*                                                                  */
/*  --------------------------------------------------------------- */
/*                                                                  */
/* end_generated_IBM_copyright_prolog                               */

#ifndef _REGS_H_ // Prevent multiple inclusion.
#define _REGS_H_

#include <hwi/include/common/compiler_support.h>

#define NUM_GPRS  (32) //
#define NUM_FPRS  (32) //
#define NUM_SPRG  (10) // SPRG[0..8], and VRSAVE.
#define NUM_GSPRG ( 4) // If no active Hypervisor, there are also 4 Guest SPRGs: GPSRG[0..3]

// Regs_t structure element offsets, generated by tools/regs_ofs.c.
#define REGS_SIZEOF       (0x05c0)
//
#define REGS_OFS_GPR0     (0x0000)
#define REGS_OFS_GPR1     (0x0008)
#define REGS_OFS_GPR2     (0x0010)
#define REGS_OFS_GPR3     (0x0018)
#define REGS_OFS_GPR4     (0x0020)
#define REGS_OFS_GPR5     (0x0028)
#define REGS_OFS_GPR6     (0x0030)
#define REGS_OFS_GPR7     (0x0038)
#define REGS_OFS_GPR8     (0x0040)
#define REGS_OFS_GPR9     (0x0048)
#define REGS_OFS_GPR10    (0x0050)
#define REGS_OFS_GPR11    (0x0058)
#define REGS_OFS_GPR12    (0x0060)
#define REGS_OFS_GPR13    (0x0068)
#define REGS_OFS_GPR14    (0x0070)
#define REGS_OFS_GPR15    (0x0078)
#define REGS_OFS_GPR16    (0x0080)
#define REGS_OFS_GPR17    (0x0088)
#define REGS_OFS_GPR18    (0x0090)
#define REGS_OFS_GPR19    (0x0098)
#define REGS_OFS_GPR20    (0x00a0)
#define REGS_OFS_GPR21    (0x00a8)
#define REGS_OFS_GPR22    (0x00b0)
#define REGS_OFS_GPR23    (0x00b8)
#define REGS_OFS_GPR24    (0x00c0)
#define REGS_OFS_GPR25    (0x00c8)
#define REGS_OFS_GPR26    (0x00d0)
#define REGS_OFS_GPR27    (0x00d8)
#define REGS_OFS_GPR28    (0x00e0)
#define REGS_OFS_GPR29    (0x00e8)
#define REGS_OFS_GPR30    (0x00f0)
#define REGS_OFS_GPR31    (0x00f8)
//
#define REGS_OFS_FPR0     (0x0100)
#define REGS_OFS_FPR1     (0x0120)
#define REGS_OFS_FPR2     (0x0140)
#define REGS_OFS_FPR3     (0x0160)
#define REGS_OFS_FPR4     (0x0180)
#define REGS_OFS_FPR5     (0x01a0)
#define REGS_OFS_FPR6     (0x01c0)
#define REGS_OFS_FPR7     (0x01e0)
#define REGS_OFS_FPR8     (0x0200)
#define REGS_OFS_FPR9     (0x0220)
#define REGS_OFS_FPR10    (0x0240)
#define REGS_OFS_FPR11    (0x0260)
#define REGS_OFS_FPR12    (0x0280)
#define REGS_OFS_FPR13    (0x02a0)
#define REGS_OFS_FPR14    (0x02c0)
#define REGS_OFS_FPR15    (0x02e0)
#define REGS_OFS_FPR16    (0x0300)
#define REGS_OFS_FPR17    (0x0320)
#define REGS_OFS_FPR18    (0x0340)
#define REGS_OFS_FPR19    (0x0360)
#define REGS_OFS_FPR20    (0x0380)
#define REGS_OFS_FPR21    (0x03a0)
#define REGS_OFS_FPR22    (0x03c0)
#define REGS_OFS_FPR23    (0x03e0)
#define REGS_OFS_FPR24    (0x0400)
#define REGS_OFS_FPR25    (0x0420)
#define REGS_OFS_FPR26    (0x0440)
#define REGS_OFS_FPR27    (0x0460)
#define REGS_OFS_FPR28    (0x0480)
#define REGS_OFS_FPR29    (0x04a0)
#define REGS_OFS_FPR30    (0x04c0)
#define REGS_OFS_FPR31    (0x04e0)
//
#define REGS_OFS_FPSCR    (0x0500)
//
#define REGS_OFS_SPRG0    (0x0508)
#define REGS_OFS_SPRG1    (0x0510)
#define REGS_OFS_SPRG2    (0x0518)
#define REGS_OFS_SPRG3    (0x0520)
#define REGS_OFS_SPRG4    (0x0528)
#define REGS_OFS_SPRG5    (0x0530)
#define REGS_OFS_SPRG6    (0x0538)
#define REGS_OFS_SPRG7    (0x0540)
#define REGS_OFS_SPRG8    (0x0548)
#define REGS_OFS_SPRG9    (0x0550)
#define REGS_OFS_GSPRG0   (0x0558)
#define REGS_OFS_GSPRG1   (0x0560)
#define REGS_OFS_GSPRG2   (0x0568)
#define REGS_OFS_GSPRG3   (0x0570)
//
#define REGS_OFS_IP       (0x0578)
#define REGS_OFS_MSR      (0x0580)
#define REGS_OFS_CR       (0x0588)
#define REGS_OFS_LR       (0x0590)
#define REGS_OFS_XER      (0x0598)
#define REGS_OFS_CTR      (0x05a0)
#define REGS_OFS_ESR      (0x05a8)
#define REGS_OFS_DEAR     (0x05b0)
#define REGS_OFS_PID      (0x05b8)
//

#define _ABI_STACK_TAIL   (288)	// ppc64 ABI protects a certain amount of
				// space *beyond* the stack pointer.  The
				// number is actually (18 + 18) * 8, the
				// space needed to save the non-volatile
				// gprs and fprs.
#define STACK_FRAME_SIZE  (128)
#define INT_FRAME_SIZE    (STACK_FRAME_SIZE + _ABI_STACK_TAIL)
	

#if !defined(__ASSEMBLY__)

#include <stdint.h>

#include <hwi/include/common/bgq_alignment.h>

#include <hwi/include/bqc/A2_core.h>


typedef union QPX_Reg_t
{
    double    d[ 4];
    float     f[ 8];
    uint64_t ll[ 4];
    uint32_t  l[ 8];
    uint8_t   b[32];
}
ALIGN_QPX_VECTOR QPX_Reg_t;

//
// This structure contains no per-core SPRs, only per-thread SPRs.
//
// NOTE: If changing this structure, update tools/regs_ofs.c and
//       rerun it to generate the structure offsets above.
//
typedef struct FwExt_Regs_t
{
    uint64_t    gpr[ NUM_GPRS ];
    QPX_Reg_t  fpr[ NUM_FPRS ];
    //
    uint64_t    fpscr;
    //
    uint64_t    sprg[  NUM_SPRG  ];
    uint64_t    gsprg[ NUM_GSPRG ];
    //
    uint64_t    ip,            // from (mc|c)srr0
                msr,           // from (mc|c)srr1
                cr,
                lr,
                xer,
                ctr,
                esr,
                dear,
                pid;
    // and a whole bunch of other stuff...
}
ALIGN_L1D_CACHE FwExt_Regs_t;

#endif // __ASSEMBLY__

#endif // Add nothing below this line.
