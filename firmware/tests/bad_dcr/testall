#!/bin/bash 
# begin_generated_IBM_copyright_prolog                             
#                                                                  
# This is an automatically generated copyright prolog.             
# After initializing,  DO NOT MODIFY OR MOVE                       
#  --------------------------------------------------------------- 
#                                                                  
# Licensed Materials - Property of IBM                             
# Blue Gene/Q                                                      
# (C) Copyright IBM Corp.  2010, 2012                              
# US Government Users Restricted Rights - Use, duplication or      
#   disclosure restricted by GSA ADP Schedule Contract with IBM    
#   Corp.                                                          
#                                                                  
# This software is available to you under the Eclipse Public       
# License (EPL).                                                   
#                                                                  
#  --------------------------------------------------------------- 
#                                                                  
# end_generated_IBM_copyright_prolog                               

runtest() {

    if [[ $? -ne 0 ]] ; then
	echo ERROR
	exit -1
    fi

    make runmmcslite parms="--envvar TEST=$2 --envvar INSTANCE=$3 --location $1 --envvar READ=$4 --envvar BAD_ADDR=$5"
}






READ=0
BAD_ADDR=1


# NOTE: GEA and UPC_C omitted intentionally (not DCRs)

#runtest $1 DevBus 0 ${READ} ${BAD_ADDR}
#exit 0

for OPT in BeDRAM CS DCR DevBus EnvMon L2Central MS_Genct MU ND_X2 ND_500 PE SERDES_LEFT SERDES_RIGHT TESTINT ; do
  echo '---' $OPT '---'
  runtest $1 $OPT 0 ${READ} ${BAD_ADDR}
done

for INSTANCE in `seq 0 1` ; do
  echo '--- DDR '${INSTANCE}' ---'
  runtest $1 DDR ${INSTANCE} ${READ} ${BAD_ADDR}
done

for INSTANCE in `seq 0 16` ; do
  echo '--- L1P '${INSTANCE}' ---'
  runtest $1 L1P ${INSTANCE} ${READ} ${BAD_ADDR}
done

for INSTANCE in `seq 0 15` ; do
  echo '--- L2 '${INSTANCE}' ---'
  runtest $1 L2 ${INSTANCE} ${READ} ${BAD_ADDR}
done

for INSTANCE in `seq 0 3` ; do
  echo '--- L2 Counter '${INSTANCE}' ---'
  runtest $1 L2Counter ${INSTANCE} ${READ} ${BAD_ADDR}
done

for INSTANCE in `seq 0 10` ; do
  echo '--- ND RESE '${INSTANCE}' ---'
  runtest $1 ND_RESE ${INSTANCE} ${READ} ${BAD_ADDR}
done

