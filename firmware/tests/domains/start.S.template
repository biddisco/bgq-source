/* begin_generated_IBM_copyright_prolog                             */
/*                                                                  */
/* This is an automatically generated copyright prolog.             */
/* After initializing,  DO NOT MODIFY OR MOVE                       */
/*  --------------------------------------------------------------- */
/*                                                                  */
/* Licensed Materials - Property of IBM                             */
/* Blue Gene/Q                                                      */
/* (C) Copyright IBM Corp.  2010, 2012                              */
/* US Government Users Restricted Rights - Use, duplication or      */
/*   disclosure restricted by GSA ADP Schedule Contract with IBM    */
/*   Corp.                                                          */
/*                                                                  */
/* This software is available to you under the Eclipse Public       */
/* License (EPL).                                                   */
/*                                                                  */
/*  --------------------------------------------------------------- */
/*                                                                  */
/* end_generated_IBM_copyright_prolog                               */

#ifndef __ASSEMBLY__
#define __ASSEMBLY__
#endif

#include <hwi/include/common/asm_support.h>
#include <hwi/include/bqc/A2_core.h>

//#include "linkage.h"

         .file "start_XDOMAINX.S"

	
//------------------------------------------------------------------------------
// Make the jump into C code at entry point "_test_entry".  We don't futz
// with stack here (that will be done on the other side).
//------------------------------------------------------------------------------
        .extern _enter_XDOMAINX
        .global _start_XDOMAINX
	.section ".text.start.XDOMAINX"
	#.type _start_XDOMAINX,@function	;
_start_XDOMAINX:
        li     %r0,0
        IMM64( %r2, __FWTST_TOC_BASE )
        bl     _enter_XDOMAINX
        nop
	b 0
	#.size _start_XDOMAINX,.-_start_XDOMAINX
	#.previous
//------------------------------------------------------------------------------


#define IVEC( label, code ) \
	.align 5; \
label:	li %r3, code; \
	b 0;

	.section ".text.XDOMAINX"

	.align 11

    	.global _vec_XDOMAINX_MCHK;

        IVEC( _vec_XDOMAINX_MCHK,     IVO_MCHK     )
        IVEC( _vec_XDOMAINX_CI,       IVO_CI       )
	IVEC( _vec_XDOMAINX_DEBUG,    IVO_DEBUG    )
        IVEC( _vec_XDOMAINX_DSI,      IVO_DSI      )
        IVEC( _vec_XDOMAINX_ISI,      IVO_ISI      )
        IVEC( _vec_XDOMAINX_EI,       IVO_EI       )
        IVEC( _vec_XDOMAINX_ALGN,     IVO_ALGN     )
        IVEC( _vec_XDOMAINX_PROG,     IVO_PROG     )
        IVEC( _vec_XDOMAINX_FPU,      IVO_FPU      )
        IVEC( _vec_XDOMAINX_SC,       IVO_SC       )
        IVEC( _vec_XDOMAINX_APU,      IVO_APU      )
        IVEC( _vec_XDOMAINX_DEC,      IVO_DEC      )
        IVEC( _vec_XDOMAINX_FIT,      IVO_FIT      )
        IVEC( _vec_XDOMAINX_WDT,      IVO_WDT      )
        IVEC( _vec_XDOMAINX_DTLB,     IVO_DTLB     )
        IVEC( _vec_XDOMAINX_ITLB,     IVO_ITLB     )
        IVEC( _vec_XDOMAINX_VECTOR,   IVO_VECTOR   )
        IVEC( _vec_XDOMAINX_Undef220, IVO_UNDEFINED )
        IVEC( _vec_XDOMAINX_Undef240, IVO_UNDEFINED )
        IVEC( _vec_XDOMAINX_Undef260, IVO_UNDEFINED )
        IVEC( _vec_XDOMAINX_PDBI,     IVO_PDBI     )
        IVEC( _vec_XDOMAINX_PDBCI,    IVO_PDBCI    )
        IVEC( _vec_XDOMAINX_GDBI,     IVO_GDBI     )
        IVEC( _vec_XDOMAINX_GDBCI,    IVO_GDBCI    )
        IVEC( _vec_XDOMAINX_EHVSC,    IVO_EHVSC    )
        IVEC( _vec_XDOMAINX_EHVPRIV,  IVO_EHVPRIV  )
        IVEC( _vec_XDOMAINX_LRATE,    IVO_LRATE    )

	

